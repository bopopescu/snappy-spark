description = 'Spark Project External Flume'

/*
configurations {
  netty {
    description 'dependency to resolve multiple netty jar inclusions'
    visible true
  }
}
*/

dependencies {
  compile project(subprojectBase + 'snappy-spark-streaming-flume-sink_' + scalaBinaryVersion)
  compile(group: 'org.apache.flume', name: 'flume-ng-core', version:'1.6.0') {
    exclude(group: 'io.netty', module: 'netty')
    exclude(module: 'flume-ng-auth')
    exclude(module: 'libthrift')
    exclude(module: 'servlet-api')
  }
  compile(group: 'org.apache.flume', name: 'flume-ng-sdk', version:'1.6.0') {
    exclude(group: 'io.netty', module: 'netty')
    exclude(module: 'libthrift')
  }

  provided project(subprojectBase + 'snappy-spark-streaming_' + scalaBinaryVersion)

  testCompile project(path: subprojectBase + 'snappy-spark-core_' + scalaBinaryVersion, configuration: 'testOutput')
  //netty group: 'io.netty', name: 'netty', version: '3.5.12.Final'
}

sourceSets.test.scala.srcDirs = []

// force required netty jar to be before other referenced netty jars
//sourceSets.test.compileClasspath = configurations.netty + sourceSets.test.compileClasspath
//sourceSets.test.runtimeClasspath = configurations.netty + sourceSets.test.runtimeClasspath
